import os
import asyncio
import random
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, Bot
from telegram.ext import Application, CommandHandler, ContextTypes, Dispatcher

# –¢–æ–∫–µ–Ω –±–µ—Ä—ë–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å—Ä–µ–¥—ã
TOKEN = os.environ["8356139072:AAFhiu7mSCb431Ewa8-vnwIPVsLW9l46TyA"]

# –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
messages = [
    "–õ–∞–±—É–±—É –≥–æ–ª–æ–¥–µ–Ω",
    "–õ–∞–±—É–±—É –≥—Ä—É—Å—Ç–Ω–æ",
    "–õ–∞–±—É–±—É —Å–∫—É—á–Ω–æ",
    "–õ–∞–±—É–±—É —Ö–æ—á–µ—Ç –∏–≥—Ä–∞—Ç—å",
    "–õ–∞–±—É–±—É —É—Å—Ç–∞–ª",
    "–õ–∞–±—É–±—É —Å—á–∞—Å—Ç–ª–∏–≤"
]

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —á–∞—Ç –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–≤ Webhook —Å–ª–æ–∂–Ω–µ–µ —Ö—Ä–∞–Ω–∏—Ç—å, –Ω–æ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞)
chat_ids = set()

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    chat_ids.add(chat_id)

    text = (
        "<b>–ü—Ä–∏–≤–µ—Ç! üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Labubu!</b>\n\n"
        "–¢—ã –ø–æ–ø–∞–ª –≤ –º–∏—Ä –õ–∞–±—É–±—É ‚Äî –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞!\n\n"
        "<b>–ß—Ç–æ –¥–µ–ª–∞—Ç—å:</b>\n"
        "‚Ä¢ –û—Ç–∫—Ä—ã–≤–∞–π —Å—É–Ω–¥—É–∫–∏\n"
        "‚Ä¢ –ö–æ—Ä–º–∏ –∏ –∏–≥—Ä–∞–π —Å –ø–∏—Ç–æ–º—Ü–µ–º\n"
        "‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π\n"
        "‚Ä¢ –ü–æ–ª—É—á–∞–π –Ω–∞–≥—Ä–∞–¥—ã\n"
    )

    keyboard = [
        [InlineKeyboardButton("–ò–≥—Ä–∞—Ç—å ‚ñ∂Ô∏è", callback_data="play")],
        [InlineKeyboardButton("–°—É–Ω–¥—É–∫–∏ üß∞", callback_data="chests")],
        [InlineKeyboardButton("–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π ü§ù", callback_data="invite")],
    ]

    await update.message.reply_html(text, reply_markup=InlineKeyboardMarkup(keyboard))

# –ö–Ω–æ–ø–∫–∏
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    data = query.data

    if data == "play":
        await query.edit_message_text("üéÆ –í—ã –Ω–∞—á–∞–ª–∏ –∏–≥—Ä–∞—Ç—å!")
    elif data == "chests":
        await query.edit_message_text("üß∞ –û—Ç–∫—Ä—ã–≤–∞–π —Å—É–Ω–¥—É–∫–∏!")
    elif data == "invite":
        await query.edit_message_text("ü§ù –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π!")

# –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Application.builder().token(TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(Dispatcher.callback_query_handler(button_handler))

# --- –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è Vercel ---
async def handler(req, res):
    # req.json() ‚Äî —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç Telegram
    data = await req.json()
    update = Update.de_json(data, app.bot)
    await app.update_queue.put(update)
    await app.process_updates()
    return {"statusCode": 200, "body": "OK"}
