import asyncio
import random
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes, CallbackQueryHandler

# --- –¢–≤–æ–π —Ç–æ–∫–µ–Ω ---
TOKEN = "8356139072:AAFhiu7mSCb431Ewa8-vnwIPVsLW9l46TyA"

# --- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ---
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)

# --- –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã ---
chat_id_global = None
messages = [
    "–õ–∞–±—É–±—É –≥–æ–ª–æ–¥–µ–Ω",
    "–õ–∞–±—É–±—É –≥—Ä—É—Å—Ç–Ω–æ",
    "–õ–∞–±—É–±—É —Å–∫—É—á–Ω–æ",
    "–õ–∞–±—É–±—É —Ö–æ—á–µ—Ç –∏–≥—Ä–∞—Ç—å",
    "–õ–∞–±—É–±—É —É—Å—Ç–∞–ª",
    "–õ–∞–±—É–±—É —Å—á–∞—Å—Ç–ª–∏–≤"
]

# --- –ö–æ–º–∞–Ω–¥–∞ /start ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global chat_id_global
    chat_id_global = update.effective_chat.id

    text = (
        "<b>–ü—Ä–∏–≤–µ—Ç! üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Labubu!</b>\n\n"
        "–¢—ã –ø–æ–ø–∞–ª –≤ —Ç—ë–ø–ª—ã–π –∏ –≤–µ—Å—ë–ª—ã–π –º–∏—Ä –õ–∞–±—É–±—É ‚Äî –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –º–æ–∂–Ω–æ –∫–æ—Ä–º–∏—Ç—å, —Ä–∞–∑–≤–ª–µ–∫–∞—Ç—å –∏ –ø—Ä–æ–∫–∞—á–∏–≤–∞—Ç—å.\n\n"
        "<b>–ß—Ç–æ –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å:</b>\n"
        "‚Ä¢ <b>–û—Ç–∫—Ä—ã–≤–∞–π —Å—É–Ω–¥—É–∫–∏</b> ‚Äî –≤–Ω—É—Ç—Ä–∏ –º–æ–Ω–µ—Ç—ã, –ø—Ä–µ–¥–º–µ—Ç—ã –∏ —à–∞–Ω—Å –≤—ã–±–∏—Ç—å —Ä–µ–¥–∫–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞.\n"
        "‚Ä¢ <b>–°–æ–±–∏—Ä–∞–π –∏ –ø—Ä–æ–∫–∞—á–∏–≤–∞–π</b> ‚Äî –∫–æ—Ä–º–∏, –∏–≥—Ä–∞–π –∏ –æ—Ç–∫—Ä—ã–≤–∞–π –Ω–æ–≤—ã–µ —Ñ–∏—à–∫–∏.\n"
        "‚Ä¢ <b>–ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π</b> ‚Äî –ø–æ–ª—É—á–∞–π –±–æ–Ω—É—Å—ã –∏ —Å—É–Ω–¥—É–∫–∏.\n"
        "‚Ä¢ <b>–ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –Ω–∞–≥—Ä–∞–¥—ã</b> ‚Äî –≤—ã–ø–æ–ª–Ω—è–π –∑–∞–¥–∞–Ω–∏—è –∏ —É—á–∞—Å—Ç–≤—É–π –≤ –∏–≤–µ–Ω—Ç–∞—Ö.\n"
        "‚Ä¢ <b>–°—Ç–∞–Ω—å —Å–∞–º—ã–º –∫—Ä—É—Ç—ã–º –≤ —à–∫–æ–ª–µ</b> ‚Äî —Å–æ–±–∏—Ä–∞–π —Ä–µ–¥–∫–∏–µ —Å–∫–∏–Ω—ã –∏ –∑–∞–Ω–∏–º–∞–π –ª–∏–¥–µ—Ä–±–æ—Ä–¥.\n\n"
        "–Ø –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –õ–∞–±—É–±—É –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç. –ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ?"
    )

    keyboard = [
        [InlineKeyboardButton("–ò–≥—Ä–∞—Ç—å ‚ñ∂Ô∏è", callback_data="play"),
         InlineKeyboardButton("–°—É–Ω–¥—É–∫–∏ üß∞", callback_data="chests")],
        [InlineKeyboardButton("–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π ü§ù", callback_data="invite"),
         InlineKeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å üë§", callback_data="profile")],
        [InlineKeyboardButton("–ü–æ–º–æ—â—å ‚ùì", callback_data="help")]
    ]

    await update.message.reply_html(text, reply_markup=InlineKeyboardMarkup(keyboard))

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ ---
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    data = query.data

    if data == "play":
        await query.edit_message_text("üéÆ –í—ã –Ω–∞—á–∞–ª–∏ –∏–≥—Ä–∞—Ç—å! –ö–æ—Ä–º–∏—Ç–µ –õ–∞–±—É–±—É –∏ –æ—Ç–∫—Ä—ã–≤–∞–π—Ç–µ —Å—É–Ω–¥—É–∫–∏.")
    elif data == "chests":
        await query.edit_message_text("üß∞ –û—Ç–∫—Ä—ã–≤–∞–π —Å—É–Ω–¥—É–∫–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –º–æ–Ω–µ—Ç—ã –∏ —Ä–µ–¥–∫–∏—Ö –õ–∞–±—É–±—É!")
    elif data == "invite":
        await query.edit_message_text("ü§ù –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –±–æ–Ω—É—Å—ã! –°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è: https://labubub-4mj5.vercel.app")
    elif data == "profile":
        await query.edit_message_text("üë§ –ó–¥–µ—Å—å –±—É–¥–µ—Ç –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å, —É—Ä–æ–≤–µ–Ω—å –õ–∞–±—É–±—É –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.")
    elif data == "help":
        await query.edit_message_text("‚ùì –Ø –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –õ–∞–±—É–±—É –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π.")

# --- –§–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π ---
async def notifier(app: Application):
    global chat_id_global
    while True:
        if chat_id_global:
            text = random.choice(messages)
            await app.bot.send_message(chat_id=chat_id_global, text=text)
        await asyncio.sleep(1800)  # 30 –º–∏–Ω—É—Ç

# --- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ---
def main():
    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))

    # –§–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞
    async def background_task(context: ContextTypes.DEFAULT_TYPE):
        await notifier(app)

    # –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    app.job_queue.run_once(lambda ctx: asyncio.create_task(background_task(ctx)), 1)

    app.run_polling()

if __name__ == "__main__":
    main()
